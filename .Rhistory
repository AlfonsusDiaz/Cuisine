cuisinedata <- read.csv('chefmozcuisine.csv')
cuisinedata
rm(cuisinedata)
chefmoz <- read.csv('chefmozcuisine.csv', fileEncoding = "UTF-8-BOM")
geo <- read.csv('geoplaces2.csv', fileEncoding = "UTF-8-BOM")
rating <- read.csv('rating_final.csv', fileEncoding = "UTF-8-BOM")
geo <- read.csv('geoplaces2.csv', fileEncoding = "UTF-8-BOM")
rating <- read.csv('rating_final.csv', fileEncoding = "UTF-8-BOM")
chefmoz <- read.csv('chefmozcuisine.csv', fileEncoding = "UTF-8-BOM")
print(chefmoz)
geo <- read.csv('geoplaces2.csv', sep = ',', fileEncoding = "UTF-8-BOM")
geo <- read.csv('geoplaces2.csv', sep = ',')
print(geo)
print(chefmoz)
chefmoz[1,]
chefmoz[1]
chefmoz[1,2]
chefmoz[1,]
geo[1,]
geo
View(chefmoz)
View(geo)
#di merge / di join
nrow(chefmoz)
#di merge / di join
chefmozxgeo <- merge(chefmoz, geo, by = "placeID")
#di cek lur
nrow(chefmozxgeo)
View(chefmozxgeo)
View(chefmoz)
#ngitung kuantitas jenis makanan yg tersedia di restoran
table(chefmozxgeo$Rcuisine)
#divalidasi coy
num1 <- table(chefmozxgeo$Rcuisine)
num1 <- num1[num1>5]
num1
pie(num1)
pie(num1, main = "Cuisines Distribution")
#1b
#ngitung berapa makanan yg ada di masing" restoran
chefmozxgeo$name
?barplot
#1b
#ngitung berapa makanan yg ada di masing" restoran
chefmozxgeo$name
View(chefmozxgeo)
pie(num1, main = "Cuisines Distribution")
#1b
#ngitung di restoran ini ada brp byk makanan
#berapa makanan yg ada di masing" restoran
chefmozxgeo$placeID
View(chefmozxgeo)
num1b <- table(chefmozxgeo$placeID)
num1b
?hist
hist(num1b)
hist(num1b,
main = "Cuisines Count Frequency based on Restaurant"
)
hist(num1b,
main = "Cuisines Count Frequency based on Restaurant",
x = lol
)
hist(num1b,
main = "Cuisines Count Frequency based on Restaurant",
x = "lol"
)
hist(num1b,
main = "Cuisines Count Frequency based on Restaurant",
xlab = "Cuisines Count"
)
hist(num1b,
main = "Cuisines Count Frequency based on Restaurant",
xlab = "Cuisines Count"
col = "light blue"
)
hist(num1b,
main = "Cuisines Count Frequency based on Restaurant",
xlab = "Cuisines Count",
col = "light blue"
)
#1c
rating
View(rating)
#1c
nrow(
rating)
View(rating)
View(chefmoz)
View(geo)
#1c
table(geo$name)
View(chefmoz)
View(geo)
#1c
ratingxgeo <-
merge(geo, rating, by = "placeID")
View(ratingxgeo)
nrow(rating)
nrow(geo)
nrow(ratingxgeo)
#------------
ratingxgeo$state
+ ratingxgeo$service_rating) / 3
#bwt kolom baru
ratingxgeo$avg_ratings <- (ratingxgeo$rating +
ratingxgeo$food_rating +
ratingxgeo$service_rating) / 3
rm(ratingxgeo$avg_ratings)
#bwt kolom baru
ratingxgeo$avg_ratings <- (ratingxgeo$rating +
ratingxgeo$food_rating +
ratingxgeo$service_rating) / 3
rm
rm(avg_ratings)
#bwt kolom baru
ratingxgeo$avg_ratings <- (ratingxgeo$rating +
ratingxgeo$food_rating +
ratingxgeo$service_rating) / 3
ratingxgeo
displayavgrat <- ratingxgeo$avg_ratings
View(rating)
displayavgrat
rm(displayavgrat)
ratingxgeo <- ratingxgeo[ratingxgeo$avg_ratings > 1.2]
ratingxgeo <- ratingxgeo[ratingxgeo$avg_ratings > 1.2,]
View(ratingxgeo)
ratingxgeo <- ratingxgeo[ratingxgeo$avg_ratings > 1.2, ]
View(ratingxgeo)
rm(ratingxgeo)
#1c
ratingxgeo <- merge(geo, rating, by = "placeID")
#------------
ratingxgeo$state
#bwt kolom baru
ratingxgeo$avg_ratings <- (ratingxgeo$rating +
ratingxgeo$food_rating +
ratingxgeo$service_rating) / 3
ratingxgeoabove <- ratingxgeo[ratingxgeo$avg_ratings > 1.2, ]
View(ratingxgeoabove)
#cara NGECEK INGET
table(ratingxgeoabove$state)
#ubah jadi huruf kecil
ratingxgeoabove$state <- tolower(ratingxgeoabove$state)
ratingxgeoabove$state
#cara NGECEK INGET
table(ratingxgeoabove$state)
#ubah jadi fix slp
ratingxgeoabove$state <- ifelse(ratingxgeoabove$state=='s.l.p.'|
ratingxgeoabove$state=='san luis potos'|
ratingxgeoabove$state=='san luis potosi',
'slp',
ratingxgeoabove$state)
#cara NGECEK INGET
table(ratingxgeoabove$state)
#a. data preprocessing
chefmoz
View(geo)
View(rating)
View(chefmoz)
#a. data preprocessing
#di join dlu sama geo, soalnay ya emg gtu soalnya
chefmozxgeo <- merge(chefmoz, geo, by = "placeID")
View(chefmozxgeo)
rmvfran <- chefmozxgeo[chefmozxgeo$franchise=='f']
rmvfran <- chefmozxgeo[chefmozxgeo$franchise=='f', ]
rmvfran
View(rmvfran)
View(rmvfran)
#RemoveOtherServices
table(chefmozxgeo$other_services)
rm(rmvfran)
rmdata <- chefmozxgeo[chefmozxgeo$franchise=='f', ]
rmdata
View(rmdata)
#RemoveOtherServices
table(rmdata$other_services)
#a. data preprocessing
#di join dlu sama geo, soalnay ya emg gtu soalnya
#RemoveFranchise
table(chefmozxgeo$franchise)
chefmozxgeo
#a. data preprocessing
#di join dlu sama geo, soalnay ya emg gtu soalnya
#RemoveFranchise
table(chefmozxgeo$franchise)
rmdata
nrow(rmdata)
#RemoveOtherServices
table(rmdata$other_services)
rmdata <- chefmozxgeo[chefmozxgeo$other_services=='none']
rmdata <- chefmozxgeo[chefmozxgeo$other_services=='none', ]
rmdata
nrow(rmdata)
rm(rmdata)
rmdata <- chefmozxgeo[chefmozxgeo$franchise=='f', ]
rmdata
rmdata <- rmdata[rmdata$other_services=='none', ]
rmdata
#RemoveCountryNotDefined
table(rmdata$country)
rmdata <- rmdata[rmdata$country!='?', ]
#RemoveCountryNotDefined
table(rmdata$country)
#ReplaceCuisineName
table(rmdata$name)
#ReplaceCuisineName
table(rmdata$Rcuisine)
rmdata$Rcuisine <- gsub(pattern = "_", replacement = " ", rmdata$Rcuisine)
rmdata$Rcuisine
table(rmdata$Rcuisine)
#b data transformation
datatrans <- split(rmdata$Rcuisine)
#b data transformation
datatrans <- split(rmdata$Rcuisinene, rmdata$placeID)
#b data transformation
trans <- split(rmdata$Rcuisinene, rmdata$placeID)
#b data transformation
datatrans <- split(rmdata$Rcuisinene, rmdata$placeID)
atatrans <- split(rmdata$Rcuisinene, rmdata$placeID)
split(rmdata$Rcuisinene, rmdata$placeID)
split(chefmozxgeo)
split(chefmozxgeo$placeID, chefmozxgeo$Rcuisine )
#b data transformation
datatrans <- split(rmdata$Rcuisine, rmdata$placeID)
table(datatrans)
datatrans
View(datatrans)
library(arules)
library(arules)
freqcui <- apriori(data = datatrans, parameter = list(supp=0.008,
target = "frequent itemsets"))
inspect(freqcui)
#associationRules
ruleass <- ruleInduction(freqcui, confidence=0.8)
inspect(ruleass)
View(rmdata)
View(ratingxgeo)
#ubah semua state jadi huruf kecil
?tolower
#ubah semua state jadi huruf kecil
?toupper
#ubah semua state jadi huruf kecil
?toupper
#ubah semua state jadi huruf kecil
?tolower
#dicek lagi bwt hist-nya
table(ratingxgeoabove$avg_ratings, ratingxgeoabove$state)
#bkin variable baru
avgrat_state_barplot <-table(ratingxgeoabove$avg_ratings, ratingxgeoabove$state)
avgrat_state_barplot
barplot(avgrat_state_barplot)
barplot(avgrat_state_barplot,beside = TRUE)
#
t(avgrat_state_barplot)
barplot(t(avgrat_state_barplot),beside = TRUE)
barplot(avgrat_state_barplot,beside = TRUE)
barplot(avgrat_state_barplot, beside = TRUE, main = "Average Ratings Distribution based on the State of Restaurant")
barplot(avgrat_state_barplot, beside = TRUE,
main = "Average Ratings Distribution based on the State of Restaurant",
xlab = "State",
col = rainbow())
barplot(avgrat_state_barplot, beside = TRUE,
main = "Average Ratings Distribution based on the State of Restaurant",
xlab = "State",
col = rainbow(avgrat_state_barplot))
barplot(avgrat_state_barplot, beside = TRUE,
main = "Average Ratings Distribution based on the State of Restaurant",
xlab = "State",
col = rainbow(nrow(avgrat_state_barplot))
)
nrow(avgrat_state_barplot)
barplot(avgrat_state_barplot, beside = TRUE,
main = "Average Ratings Distribution\nbased on the State of Restaurant",
xlab = "State",
col = rainbow(nrow(avgrat_state_barplot))
)
#di cek lur
nrow(chefmozxgeo)
View(chefmozxgeo)
nrow(avgrat_state_barplot)
avgrat_state_barplot
chefmoz <- read.csv('chefmozcuisine.csv', sep = ',', fileEncoding = "UTF-8-BOM")
chefmoz <- read.csv('chefmozcuisine.csv', sep = ',', fileEncoding = "UTF-8-BOM")
geo <- read.csv('geoplaces2.csv', sep = ',')
rating <- read.csv('rating_final.csv', sep = ',', fileEncoding = "UTF-8-BOM")
#di merge / di join
chefmozxgeo <- merge(chefmoz, geo, by = "placeID")
#1a
#ngitung kuantitas jenis makanan yg plg sering dijual di restoran
table(chefmozxgeo$Rcuisine)
#divalidasi / filter coy
num1 <- table(chefmozxgeo$Rcuisine)
num1 <- num1[num1>5]
num1
pie(num1, main = "Cuisines Distribution")
#1b
#ngitung di restoran ini ada brp byk jenis makanan
#berapa makanan yg ada di masing" restoran
chefmozxgeo$placeID
num1b <- table(chefmozxgeo$placeID)
num1b
hist(num1b,
main = "Cuisines Count Frequency based on Restaurant",
xlab = "Cuisines Count",
col = "light blue"
)
#1c
ratingxgeo <- merge(geo, rating, by = "placeID")
#dicek-------
nrow(ratingxgeo)
nrow(geo)
#------------
ratingxgeo$state
#bwt kolom baru
ratingxgeo$avg_ratings <- (ratingxgeo$rating +
ratingxgeo$food_rating +
ratingxgeo$service_rating) / 3
ratingxgeoabove <- ratingxgeo[ratingxgeo$avg_ratings > 1.2, ]
#cara NGECEK INGET
table(ratingxgeoabove$state)
#ubah semua state jadi huruf kecil
ratingxgeoabove$state <- tolower(ratingxgeoabove$state)
#ubah jadi fix slp
ratingxgeoabove$state <- ifelse(ratingxgeoabove$state=='s.l.p.'|
ratingxgeoabove$state=='san luis potos'|
ratingxgeoabove$state=='san luis potosi',
'slp',
ratingxgeoabove$state)
#dicek lagi bwt barplot-nya
table(ratingxgeoabove$avg_ratings, ratingxgeoabove$state)
#bkin variable baru
avgrat_state_barplot <-table(ratingxgeoabove$avg_ratings, ratingxgeoabove$state)
barplot(avgrat_state_barplot, beside = TRUE,
main = "Average Ratings Distribution\nbased on the State of Restaurant",
xlab = "State",
col = rainbow(nrow(avgrat_state_barplot))
)
nrow(avgrat_state_barplot)
#t() --> dibalik
#2 APRIORI
#13.20 -->180mnt 16.20 -->20mnt 16.40
#a. data preprocessing
#di join dlu sama geo, soalnay ya emg gtu soalnya
#RemoveFranchise
chefmozxgeo <- merge(chefmoz, geo, by = "placeID")
table(chefmozxgeo$franchise)
rmdata <- chefmozxgeo[chefmozxgeo$franchise=='f', ]
nrow(rmdata)
rmdata
#RemoveOtherServices
table(rmdata$other_services)
rmdata <- rmdata[rmdata$other_services=='none', ]
rmdata
#RemoveCountryNotDefined
table(rmdata$country)
rmdata <- rmdata[rmdata$country!='?', ]
#ReplaceCuisineName
table(rmdata$Rcuisine)
rmdata$Rcuisine <- gsub(pattern = "_", replacement = " ", rmdata$Rcuisine)
table(rmdata$Rcuisine)
#b data transformation
datatrans <- split(rmdata$Rcuisine, rmdata$placeID)
datatrans
library(arules)
freqcui <- apriori(data = datatrans, parameter = list(supp=0.008,
target = "frequent itemsets"))
inspect(freqcui)
#associationRules
ruleass <- ruleInduction(freqcui, confidence=0.8)
inspect(ruleass)
View(ratingxgeo)
#dicek lagi bwt barplot-nya
table(ratingxgeoabove$avg_ratings, ratingxgeoabove$state)
